/**
 * AIsBreaker API
 * Specification of the AIsBreaker API. This API is used to access AI services.
 *
 * OpenAPI spec version: 0.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* An image response is requested. Here we specify the favored image result.
*/
export class RequestMediaImage {
    /**
    * favored width of output image. Respect of limits of your service and engine. It\'s not guaranteed that the result fits into it.
    */
    'width'?: number;
    /**
    * favored height of output image. Respect of limits of your service and engine. It\'s not guaranteed that the result fits into it.
    */
    'height'?: number;
    /**
    * favored delivery format. It\'s not guaranteed that the service uses it.
    */
    'delivery'?: RequestMediaImageDeliveryEnum;
    /**
    * favored image format. It\'s not guaranteed that the service uses it.
    */
    'format'?: RequestMediaImageFormatEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "width",
            "baseName": "width",
            "type": "number",
            "format": ""
        },
        {
            "name": "height",
            "baseName": "height",
            "type": "number",
            "format": ""
        },
        {
            "name": "delivery",
            "baseName": "delivery",
            "type": "RequestMediaImageDeliveryEnum",
            "format": ""
        },
        {
            "name": "format",
            "baseName": "format",
            "type": "RequestMediaImageFormatEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return RequestMediaImage.attributeTypeMap;
    }

    public constructor() {
    }
}


export type RequestMediaImageDeliveryEnum = "url" | "base64" ;
export type RequestMediaImageFormatEnum = "jpeg" | "png" | "gif" ;

